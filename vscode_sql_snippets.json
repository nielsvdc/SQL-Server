{
  "sqlIndexFragmentation": {
    "prefix": "sqlIndexFragmentation",
    "description": "Get indexes & fragmentation",
    "body": [
      "-- Get indexes and fragmentation",
      "SELECT",
      "    s.name AS 'Schema'",
      "    ,t.name AS 'Table'",
      "    ,i.name AS 'Index'",
      "    ,i.type_desc AS 'Type'",
      "    ,stats.avg_fragmentation_in_percent AS 'Fragmentation %'",
      "    ,stats.Page_count AS 'Pagecount'",
      "    ,p.rows AS 'Rowcount'",
      "    ,IIF(stats.avg_fragmentation_in_percent >= 20, CONCAT('ALTER INDEX [', i.name, '] ON [', s.name, '].[', t.name, '] REORGANIZE'), NULL) AS 'Query'",
      "FROM",
      "    sys.dm_db_index_physical_stats(DB_ID(), NULL, NULL, NULL, NULL) AS stats",
      "    INNER JOIN sys.tables t ON t.object_id = stats.object_id",
      "    INNER JOIN sys.schemas s ON t.schema_id = s.schema_id",
      "    INNER JOIN sys.indexes i ON i.object_id = stats.object_id AND stats.index_id = I.index_id",
      "    INNER JOIN sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id",
      "WHERE",
      "    stats.database_id = DB_ID()",
      "    AND i.name IS NOT NULL",
      "    AND stats.avg_fragmentation_in_percent > 0",
      "ORDER BY stats.avg_fragmentation_in_percent DESC",
      "GO"
    ]
  },
  "sqlColumnstoreIndexFragmentation": {
    "prefix": "sqlColumnstoreIndexStatistics",
    "description": "Get columnstore statistics",
    "body": [
      "-- Get columnstore indexes statistics",
      "SELECT",
      "    s.name",
      "    ,t.name AS TableName",
      "    ,i.name AS IndexName",
      "    ,SUM(stats.total_rows) AS TotalRows",
      "    ,SUM(stats.deleted_rows) AS DeletedRows",
      "    ,SUM(stats.deleted_rows) * 100.00",
      "        / NULLIF(SUM(stats.total_rows), 0) AS ChangePercentage",
      "    ,IIF(",
      "        SUM(stats.deleted_rows) * 100.00 / NULLIF(SUM(stats.total_rows), 0) >= 20,",
      "        CONCAT('ALTER INDEX [', i.name, '] ON [', s.name, '].[', t.name, '] REORGANIZE'),",
      "        NULL) AS 'Query'",
      "FROM",
      "    sys.dm_db_column_store_row_group_physical_stats AS stats",
      "    INNER JOIN sys.indexes AS i ON i.index_id = stats.index_id",
      "        AND i.object_id = stats.object_id",
      "    INNER JOIN sys.tables AS t ON t.object_id = i.object_id",
      "    INNER JOIN sys.schemas AS s ON s.schema_id = t.schema_id",
      "GROUP BY",
      "    s.name, t.name, i.name",
      "GO"
    ]
  },
  "sqlTableSpaceUsageAndRowCount": {
    "prefix": "sqlTableSpaceUsageAndRowCount",
    "description": "Get space usage and row count for all tables",
    "body": [
      "SELECT",
      "    SchemaName       = s.NAME",
      "    ,TableName       = t.NAME",
      "    ,RowCounts       = MAX(p.rows)",
      "    ,TotalSpaceMB    = (SUM(a.total_pages) * 8) / 1024.0",
      "    ,UsedSpaceMB     = (SUM(a.used_pages) * 8) / 1024.0",
      "    ,DataSpaceMB     = (SUM(a.data_pages) * 8) /1024.0",
      "FROM sys.tables t",
      "INNER JOIN sys.indexes i ON t.OBJECT_ID = i.object_id",
      "INNER JOIN sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id",
      "INNER JOIN sys.allocation_units a ON p.partition_id = a.container_id",
      "INNER JOIN sys.schemas s ON s.schema_id = t.schema_id",
      "WHERE",
      "    i.OBJECT_ID > 255",
      "    AND i.index_id IN (0,1)",
      "GROUP BY s.NAME, t.NAME",
      "ORDER BY TotalSpaceMB DESC",
      "GO"
    ]
  },
  "sqlRunningQueries": {
    "prefix": "sqlRunningQueries",
    "description": "Get currently running queries",
    "body": [
      "SELECT",
      "    sqltext.TEXT,",
      "    req.session_id,",
      "    req.status,",
      "    req.command,",
      "    req.cpu_time,",
      "    req.total_elapsed_time",
      "FROM sys.dm_exec_requests req",
      "CROSS APPLY sys.dm_exec_sql_text(req.sql_handle) AS sqltext",
      "GO"
    ]
  },
  "sqlRoleMembers": {
    "prefix": "sqlRoleMembers",
    "description": "Get members per database role",
    "body": [
      "-- Get role members",
      "SELECT",
      "    pr.[name]                 AS [Role_name]",
      "    ,mb.[name]                AS [Member_name]",
      "    ,mb.[type_desc]           AS [Member_type]",
      "    ,pr.[type_desc]           AS [Role_type]",
      "    ,mb.[default_schema_name] AS [Default_schema]",
      "    ,pr.is_fixed_role         AS [Is_fixed_role]",
      "FROM sys.database_role_members rm",
      "LEFT JOIN sys.database_principals pr ON pr.principal_id = rm.role_principal_id",
      "LEFT JOIN sys.database_principals mb ON mb.principal_id = rm.member_principal_id",
      "ORDER BY pr.[name]",
      "GO"
    ]
  },
  "sqlObjectPermissions": {
    "prefix": "sqlObjectPermissions",
    "description": "Get permissions per object",
    "body": [
      "-- List all object permissions",
      "SELECT",
      "[Object_type]       = [dp].[class_desc]",
      ",[Object_name]      = COALESCE([sm].[name], [ob].[name])",
      ",[Permission_name]  = [dp].[permission_name]",
      ",[State]            = [dp].[state_desc]",
      ",[Principal_name]   = [pr].[name]",
      ",[Principal_type]   = [pr].[type_desc]",
      ",CASE",
      "    WHEN [dp].[class_desc] = 'SCHEMA' ",
      "        THEN CONCAT([dp].[state_desc], ' ', [dp].[permission_name], ' ON ', [dp].[class_desc], '::', QUOTENAME([sm].[name]) COLLATE Latin1_General_100_BIN2_UTF8,' TO ', QUOTENAME([pr].[name]))",
      "    WHEN [dp].[class_desc] = 'DATABASE_SCOPED_CREDENTIAL' AND [dp].[type] = 'RF'",
      "        THEN CONCAT([dp].[state_desc], ' ', [dp].[permission_name], ' ON ', REPLACE([dp].[class_desc], '_',' '), '::', QUOTENAME([dc].[name]) COLLATE Latin1_General_100_BIN2_UTF8,' TO ', QUOTENAME([pr].[name]))",
      "    WHEN [dp].[class_desc] = 'DATABASE'",
      "        THEN CONCAT([dp].[state_desc], ' ', [dp].[permission_name], ' TO ', QUOTENAME([pr].[name]))",
      "    WHEN [dp].[class_desc] = 'OBJECT_OR_COLUMN'",
      "        THEN CONCAT([dp].[state_desc], ' ', [dp].[permission_name], ' ON OBJECT', '::', QUOTENAME([smo].[name]), '.', QUOTENAME([ob].[name]) COLLATE Latin1_General_100_BIN2_UTF8,' TO ', QUOTENAME([pr].[name]))",
      "END [Apply_permission_cmd]",
      "FROM [sys].[database_permissions] AS [dp]",
      "LEFT JOIN [sys].[schemas] [sm] ON [sm].[schema_id] = [dp].[major_id] AND [dp].[class_desc] = 'SCHEMA'",
      "LEFT JOIN [sys].[objects] [ob] ON [ob].[object_id] = [dp].[major_id]",
      "LEFT JOIN [sys].[schemas] [smo] ON [smo].[schema_id] = [ob].[schema_id]",
      "LEFT JOIN [sys].[database_principals] [pr] ON [pr].[principal_id] = [dp].[grantee_principal_id]",
      "LEFT JOIN [sys].[database_credentials] [dc] ON [dc].[credential_id] = [dp].[major_id]",
      "WHERE [dp].[major_id] >= 0 AND [dp].[type] <> 'CO' AND [dp].[grantee_principal_id] <> 0",
      "ORDER BY [pr].[name], [dp].[permission_name], 2",
      "GO"
    ]
  }
}
